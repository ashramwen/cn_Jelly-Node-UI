@import '../../../assets/styles/global';

$stroke-default-width: 1.5px;
$stroke-active-width: 2.5px;


jn-canvas {
  display: block;
  height: 100%;
  width: 100%;
  overflow: auto;
  position: relative;
}

svg {
  &.selected{
    g.node-group, g.link{
      opacity: 0.6;
      &.selected{
        opacity: 1;
      }
    }
  }
  .node-group {
    cursor: move;
    .node {
      stroke: $node-color-default;
      fill: transparent;
      stroke-width: $stroke-default-width;
    }
    .port {
      cursor: crosshair;
      &:hover,
      &.hover{
        rect {
          stroke-width: $stroke-active-width;
          stroke: $node-color-active;
          fill: #fff;
        }
        &.error rect{
          stroke: $node-color-danger;
        }
        &.success rect{
          stroke: $node-color-success;
        }
      }
      rect {
        stroke-width: $stroke-default-width;
        stroke: $node-color-default;
        fill: $canvas-background-color;
      }
    }
    text {
      fill: $node-color-default;
    }
    &.connected {
      .node, path {
        stroke: $node-color-success;
      }
      text {
        fill: $node-color-success;
      }
      .port {
        rect{
          stroke: $node-color-success;
          &.connected{
            fill: $node-color-success;
          }
        }
      }
      &.error .port rect.connected{
        fill: $node-color-danger;
      }
    }
    &.selected {
      .node, .port rect {
        stroke-width: $stroke-active-width;
      }
    }
    &.error {
      .node, path {
        stroke: $node-color-danger;
      }
      text {
        fill: $node-color-danger;
      }
      .port {
        rect{
          stroke: $node-color-danger;
        }
      }
    }
  }
  g.new_link path {
    stroke: $node-color-active;
    stroke-width: $stroke-active-width;
    fill: transparent;
  }
  g.new_link path {
    stroke-dasharray: 5,5;
  }
  g.link {
    cursor: pointer;
    path {
      stroke: $node-color-success;
      stroke-width: $stroke-default-width;
      fill: transparent;
    }
    path.link-wrapper{
      stroke: rgba($color: #000, $alpha: 0);
      stroke-width: 10px;
    }
    &.active path.link, &.selected path.link {
      stroke-width: $stroke-active-width;
    }
    &.error path.link{
      stroke: $node-color-danger;
    }
  }
}

div.tooltip {
  position: absolute;
  text-align: center;
  max-width: 200px;
  min-width: 100px;
  padding: 10px;
  font: 12px sans-serif;
  background: rgba(200,200,200, 0.4);
  border: 0px;
  border-radius: 3px;
  pointer-events: none;
  span.fa{
    font-size: 15px;
    margin-right: 10px;
    color: rgba(200,200,200, 0.7);
  }
  span{
    color: $color-white;
  }
  transition: opacity 0.6s;
  &:after{
    width: 0; 
    height: 0; 
    border-left: 5px solid transparent;
    border-right: 5px solid transparent;
    border-top: 7px solid rgba(200,200,200, 0.4);
    position: absolute;
    content: " ";
    bottom: -7px;
    left: 5px;
  }
}


.ui-draggable-dragging {
    margin: 0 !important;
}

#chart{
  position: relative;
  width: 100%;
  height: 100%;
  overflow: auto;
}

.nav-map{
  position: absolute;
  right: 20px;
  top: 20px;
  background: rgba(0,0,0,0.5);
  border: solid 1px #ccc;
  display: none;
  cursor: pointer;
  .view-port{
    display: flex;
    position: absolute;
    .inner{
      flex: 1;
      border: red solid 1px;
    }
  }
}

.canvas-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: auto;
}